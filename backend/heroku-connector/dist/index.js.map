{"version":3,"sources":["../src/index.js"],"names":["dotenv","config","app","server","http","createServer","use","exposedHeaders","corsHeaders","bodyParser","json","limit","bodyLimit","db","listen","process","env","PORT","port","console","log","address"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,mBAAOC,MAAP;;AAEA,IAAMC,GAAG,GAAG,0BAAZ;AACAA,GAAG,CAACC,MAAJ,GAAaC,iBAAKC,YAAL,CAAkBH,GAAlB,CAAb,C,CAEA;;AACAA,GAAG,CAACI,GAAJ,CAAQ,wBAAO,KAAP,CAAR,E,CAEA;;AACAJ,GAAG,CAACI,GAAJ,CACE,sBAAK;AACHC,EAAAA,cAAc,EAAEN,mBAAOO;AADpB,CAAL,CADF;AAMAN,GAAG,CAACI,GAAJ,CACEG,uBAAWC,IAAX,CAAgB;AACdC,EAAAA,KAAK,EAAEV,mBAAOW;AADA,CAAhB,CADF,E,CAMA;;AACA,oBAAa,UAAAC,EAAE,EAAI;AACjB;AACAX,EAAAA,GAAG,CAACI,GAAJ,CAAQ,4BAAW;AAAEL,IAAAA,MAAM,EAANA,kBAAF;AAAUY,IAAAA,EAAE,EAAFA;AAAV,GAAX,CAAR,EAFiB,CAIjB;;AACAX,EAAAA,GAAG,CAACI,GAAJ,CAAQ,MAAR,EAAgB,qBAAI;AAAEL,IAAAA,MAAM,EAANA,kBAAF;AAAUY,IAAAA,EAAE,EAAFA;AAAV,GAAJ,CAAhB;AAEAX,EAAAA,GAAG,CAACC,MAAJ,CAAWW,MAAX,CAAkBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoBhB,mBAAOiB,IAA7C,EAAmD,YAAM;AACvDC,IAAAA,OAAO,CAACC,GAAR,2BAA+BlB,GAAG,CAACC,MAAJ,CAAWkB,OAAX,GAAqBH,IAApD;AACD,GAFD;AAGD,CAVD;eAYehB,G","sourcesContent":["import http from 'http';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport morgan from 'morgan';\r\nimport bodyParser from 'body-parser';\r\nimport initializeDb from './db';\r\nimport middleware from './middleware';\r\nimport api from './api';\r\nimport config from './config.json';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nconst app = express();\r\napp.server = http.createServer(app);\r\n\r\n// logger\r\napp.use(morgan('dev'));\r\n\r\n// 3rd party middleware\r\napp.use(\r\n  cors({\r\n    exposedHeaders: config.corsHeaders,\r\n  }),\r\n);\r\n\r\napp.use(\r\n  bodyParser.json({\r\n    limit: config.bodyLimit,\r\n  }),\r\n);\r\n\r\n// connect to db\r\ninitializeDb(db => {\r\n  // internal middleware\r\n  app.use(middleware({ config, db }));\r\n\r\n  // api router\r\n  app.use('/api', api({ config, db }));\r\n\r\n  app.server.listen(process.env.PORT || config.port, () => {\r\n    console.log(`Started on port ${app.server.address().port}`);\r\n  });\r\n});\r\n\r\nexport default app;\r\n"],"file":"index.js"}